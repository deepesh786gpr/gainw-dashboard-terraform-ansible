{
  "name": "EKS Cluster",
  "description": "Deploy a comprehensive Amazon EKS cluster with VPC, node groups, and security configurations",
  "category": "Container",
  "terraformCode": "# Data sources for availability zones\ndata \"aws_availability_zones\" \"available\" {\n  state = \"available\"\n}\n\n# Local values for computed configurations\nlocals {\n  azs = slice(data.aws_availability_zones.available.names, 0, 2)\n  \n  common_tags = {\n    Name        = var.cluster_name\n    Environment = var.environment\n    Module      = \"eks-cluster\"\n    Terraform   = \"true\"\n  }\n}\n\n# VPC for EKS cluster\nresource \"aws_vpc\" \"eks_vpc\" {\n  cidr_block           = var.vpc_cidr\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n  \n  tags = merge(\n    local.common_tags,\n    {\n      Name = \"${var.cluster_name}-vpc\"\n      \"kubernetes.io/cluster/${var.cluster_name}\" = \"shared\"\n    }\n  )\n}\n\n# Internet Gateway\nresource \"aws_internet_gateway\" \"eks_igw\" {\n  vpc_id = aws_vpc.eks_vpc.id\n  \n  tags = merge(\n    local.common_tags,\n    {\n      Name = \"${var.cluster_name}-igw\"\n    }\n  )\n}\n\n# Public Subnets\nresource \"aws_subnet\" \"public\" {\n  count = length(var.public_subnet_cidrs)\n  \n  vpc_id                  = aws_vpc.eks_vpc.id\n  cidr_block              = var.public_subnet_cidrs[count.index]\n  availability_zone       = local.azs[count.index]\n  map_public_ip_on_launch = true\n  \n  tags = merge(\n    local.common_tags,\n    {\n      Name = \"${var.cluster_name}-public-${local.azs[count.index]}\"\n      \"kubernetes.io/cluster/${var.cluster_name}\" = \"shared\"\n      \"kubernetes.io/role/elb\" = \"1\"\n    }\n  )\n}\n\n# Private Subnets\nresource \"aws_subnet\" \"private\" {\n  count = length(var.private_subnet_cidrs)\n  \n  vpc_id            = aws_vpc.eks_vpc.id\n  cidr_block        = var.private_subnet_cidrs[count.index]\n  availability_zone = local.azs[count.index]\n  \n  tags = merge(\n    local.common_tags,\n    {\n      Name = \"${var.cluster_name}-private-${local.azs[count.index]}\"\n      \"kubernetes.io/cluster/${var.cluster_name}\" = \"shared\"\n      \"kubernetes.io/role/internal-elb\" = \"1\"\n    }\n  )\n}\n\n# EKS Cluster IAM Role\nresource \"aws_iam_role\" \"eks_cluster_role\" {\n  name = \"${var.cluster_name}-cluster-role\"\n  \n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"eks.amazonaws.com\"\n        }\n      }\n    ]\n  })\n  \n  tags = local.common_tags\n}\n\nresource \"aws_iam_role_policy_attachment\" \"eks_cluster_policy\" {\n  policy_arn = \"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"\n  role       = aws_iam_role.eks_cluster_role.name\n}\n\n# EKS Cluster\nresource \"aws_eks_cluster\" \"main\" {\n  name     = var.cluster_name\n  role_arn = aws_iam_role.eks_cluster_role.arn\n  version  = var.kubernetes_version\n  \n  vpc_config {\n    subnet_ids              = concat(aws_subnet.public[*].id, aws_subnet.private[*].id)\n    endpoint_private_access = var.endpoint_private_access\n    endpoint_public_access  = var.endpoint_public_access\n    public_access_cidrs     = var.public_access_cidrs\n  }\n  \n  enabled_cluster_log_types = var.cluster_log_types\n  \n  dynamic \"encryption_config\" {\n    for_each = var.kms_key_arn != null ? [1] : []\n    content {\n      provider {\n        key_arn = var.kms_key_arn\n      }\n      resources = [\"secrets\"]\n    }\n  }\n  \n  tags = local.common_tags\n  \n  depends_on = [\n    aws_iam_role_policy_attachment.eks_cluster_policy\n  ]\n}",
  "variables": [
    {
      "name": "cluster_name",
      "type": "string",
      "description": "Name of the EKS cluster",
      "required": true
    },
    {
      "name": "kubernetes_version",
      "type": "string",
      "description": "Kubernetes version",
      "required": false,
      "default": "1.28",
      "options": ["1.24", "1.25", "1.26", "1.27", "1.28", "1.29"]
    },
    {
      "name": "vpc_cidr",
      "type": "string",
      "description": "CIDR block for VPC",
      "required": false,
      "default": "10.0.0.0/16"
    },
    {
      "name": "public_subnet_cidrs",
      "type": "list",
      "description": "CIDR blocks for public subnets",
      "required": false,
      "default": ["10.0.1.0/24", "10.0.2.0/24"]
    },
    {
      "name": "private_subnet_cidrs",
      "type": "list",
      "description": "CIDR blocks for private subnets",
      "required": false,
      "default": ["10.0.10.0/24", "10.0.20.0/24"]
    },
    {
      "name": "node_instance_types",
      "type": "list",
      "description": "Instance types for EKS node group",
      "required": false,
      "default": ["t3.medium"],
      "options": ["t3.small", "t3.medium", "t3.large", "t3.xlarge", "m5.large", "m5.xlarge", "m5.2xlarge", "c5.large", "c5.xlarge", "c5.2xlarge"]
    },
    {
      "name": "ami_type",
      "type": "string",
      "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group",
      "required": false,
      "default": "AL2_x86_64",
      "options": ["AL2_x86_64", "AL2_x86_64_GPU", "AL2_ARM_64", "CUSTOM", "BOTTLEROCKET_ARM_64", "BOTTLEROCKET_x86_64"]
    },
    {
      "name": "capacity_type",
      "type": "string",
      "description": "Type of capacity associated with the EKS Node Group",
      "required": false,
      "default": "ON_DEMAND",
      "options": ["ON_DEMAND", "SPOT"]
    },
    {
      "name": "disk_size",
      "type": "number",
      "description": "Disk size in GiB for worker nodes",
      "required": false,
      "default": 20
    },
    {
      "name": "desired_capacity",
      "type": "number",
      "description": "Desired number of worker nodes",
      "required": false,
      "default": 2
    },
    {
      "name": "max_capacity",
      "type": "number",
      "description": "Maximum number of worker nodes",
      "required": false,
      "default": 4
    },
    {
      "name": "min_capacity",
      "type": "number",
      "description": "Minimum number of worker nodes",
      "required": false,
      "default": 1
    },
    {
      "name": "endpoint_private_access",
      "type": "boolean",
      "description": "Enable private API server endpoint",
      "required": false,
      "default": true
    },
    {
      "name": "endpoint_public_access",
      "type": "boolean",
      "description": "Enable public API server endpoint",
      "required": false,
      "default": true
    },
    {
      "name": "public_access_cidrs",
      "type": "list",
      "description": "List of CIDR blocks that can access the Amazon EKS public API server endpoint",
      "required": false,
      "default": ["0.0.0.0/0"]
    },
    {
      "name": "cluster_log_types",
      "type": "list",
      "description": "List of control plane logging to enable",
      "required": false,
      "default": ["api", "audit", "authenticator", "controllerManager", "scheduler"]
    },
    {
      "name": "kms_key_arn",
      "type": "string",
      "description": "ARN of the KMS key to use for encryption (optional)",
      "required": false,
      "default": ""
    },
    {
      "name": "environment",
      "type": "string",
      "description": "Environment name",
      "required": false,
      "default": "dev",
      "options": ["dev", "staging", "prod"]
    }
  ]
}
