{
  "name": "Dashboard-Terragrunt Integration Configuration",
  "version": "1.0.0",
  "description": "Configuration mapping between Terraform Dashboard templates and Terragrunt configurations",
  
  "terragrunt_environments": {
    "dev": {
      "name": "Development",
      "description": "Development environment for testing and development",
      "path": "environments/dev",
      "auto_approve": false,
      "default_region": "us-east-1"
    },
    "staging": {
      "name": "Staging", 
      "description": "Staging environment for pre-production testing",
      "path": "environments/staging",
      "auto_approve": false,
      "default_region": "us-east-1"
    },
    "prod": {
      "name": "Production",
      "description": "Production environment",
      "path": "environments/prod", 
      "auto_approve": false,
      "default_region": "us-east-1"
    }
  },

  "template_mappings": {
    "ec2-instance": {
      "dashboard_template": "EC2 Instance",
      "terragrunt_path": "ec2-instance/terragrunt.hcl",
      "module_source": "modules/ec2-instance",
      "variable_mappings": {
        "instance_name": "name",
        "instance_type": "instance_type", 
        "ami_id": "ami_id",
        "key_pair": "key_pair_name",
        "vpc_id": "vpc_id",
        "subnet_id": "subnet_id",
        "security_groups": "security_group_ids",
        "user_data": "user_data",
        "associate_public_ip": "associate_public_ip",
        "volume_size": "volume_size",
        "volume_type": "volume_type",
        "environment": "environment"
      },
      "required_variables": [
        "name",
        "instance_type"
      ],
      "optional_variables": [
        "ami_id",
        "key_pair_name", 
        "vpc_id",
        "subnet_id",
        "user_data",
        "volume_size"
      ]
    },
    "vpc": {
      "dashboard_template": "VPC",
      "terragrunt_path": "vpc/terragrunt.hcl",
      "module_source": "modules/vpc",
      "variable_mappings": {
        "vpc_name": "name",
        "cidr_block": "cidr_block",
        "enable_dns_hostnames": "enable_dns_hostnames",
        "enable_dns_support": "enable_dns_support",
        "environment": "environment"
      }
    },
    "rds": {
      "dashboard_template": "RDS Database",
      "terragrunt_path": "rds/terragrunt.hcl", 
      "module_source": "modules/rds",
      "variable_mappings": {
        "db_name": "db_name",
        "engine": "engine",
        "engine_version": "engine_version",
        "instance_class": "instance_class",
        "allocated_storage": "allocated_storage",
        "username": "username",
        "password": "password",
        "vpc_id": "vpc_id",
        "subnet_ids": "subnet_ids",
        "environment": "environment"
      }
    },
    "eks": {
      "dashboard_template": "EKS Cluster",
      "terragrunt_path": "eks/terragrunt.hcl",
      "module_source": "modules/eks", 
      "variable_mappings": {
        "cluster_name": "cluster_name",
        "cluster_version": "cluster_version",
        "vpc_id": "vpc_id",
        "subnet_ids": "subnet_ids",
        "node_group_instance_types": "node_group_instance_types",
        "node_group_desired_size": "node_group_desired_size",
        "environment": "environment"
      }
    },
    "s3": {
      "dashboard_template": "S3 Bucket",
      "terragrunt_path": "s3/terragrunt.hcl",
      "module_source": "modules/s3",
      "variable_mappings": {
        "bucket_name": "bucket_name",
        "versioning_enabled": "versioning_enabled",
        "encryption_enabled": "encryption_enabled",
        "public_access_block": "public_access_block",
        "environment": "environment"
      }
    },
    "lambda": {
      "dashboard_template": "Lambda Function",
      "terragrunt_path": "lambda/terragrunt.hcl",
      "module_source": "modules/lambda",
      "variable_mappings": {
        "function_name": "function_name",
        "runtime": "runtime",
        "handler": "handler",
        "source_code_path": "source_code_path",
        "memory_size": "memory_size",
        "timeout": "timeout",
        "environment_variables": "environment_variables",
        "vpc_config": "vpc_config",
        "environment": "environment"
      }
    }
  },

  "deployment_workflows": {
    "terragrunt_plan": {
      "name": "Terragrunt Plan",
      "description": "Generate execution plan using Terragrunt",
      "commands": [
        "cd {environment_path}/{service_path}",
        "terragrunt plan -out=tfplan"
      ],
      "output_files": ["tfplan"],
      "requires_approval": false
    },
    "terragrunt_apply": {
      "name": "Terragrunt Apply", 
      "description": "Apply Terragrunt configuration",
      "commands": [
        "cd {environment_path}/{service_path}",
        "terragrunt apply tfplan"
      ],
      "requires_approval": true,
      "depends_on": ["terragrunt_plan"]
    },
    "terragrunt_destroy": {
      "name": "Terragrunt Destroy",
      "description": "Destroy Terragrunt-managed resources",
      "commands": [
        "cd {environment_path}/{service_path}",
        "terragrunt destroy -auto-approve"
      ],
      "requires_approval": true,
      "confirmation_required": true
    }
  },

  "validation_rules": {
    "ec2_instance": {
      "instance_type": {
        "allowed_values": ["t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge"],
        "default": "t3.micro"
      },
      "volume_size": {
        "min": 8,
        "max": 1000,
        "default": 20
      }
    },
    "rds": {
      "engine": {
        "allowed_values": ["mysql", "postgres", "mariadb"],
        "default": "mysql"
      },
      "instance_class": {
        "allowed_values": ["db.t3.micro", "db.t3.small", "db.t3.medium"],
        "default": "db.t3.micro"
      }
    }
  },

  "dashboard_integration": {
    "api_endpoints": {
      "list_environments": "/api/terragrunt/environments",
      "list_services": "/api/terragrunt/environments/{env}/services",
      "get_configuration": "/api/terragrunt/environments/{env}/services/{service}/config",
      "update_configuration": "/api/terragrunt/environments/{env}/services/{service}/config",
      "plan_deployment": "/api/terragrunt/environments/{env}/services/{service}/plan",
      "apply_deployment": "/api/terragrunt/environments/{env}/services/{service}/apply",
      "destroy_deployment": "/api/terragrunt/environments/{env}/services/{service}/destroy",
      "get_outputs": "/api/terragrunt/environments/{env}/services/{service}/outputs"
    },
    "ui_components": {
      "environment_selector": "EnvironmentSelector",
      "service_selector": "ServiceSelector", 
      "variable_editor": "TerragruntVariableEditor",
      "deployment_status": "DeploymentStatus",
      "output_viewer": "OutputViewer"
    }
  },

  "github_integration": {
    "supported_structures": [
      "terragrunt_monorepo",
      "terraform_modules_separate",
      "mixed_structure"
    ],
    "import_mappings": {
      "terragrunt.hcl": "terragrunt_configuration",
      "variables.tf": "terraform_variables",
      "main.tf": "terraform_main",
      "outputs.tf": "terraform_outputs"
    },
    "template_generation": {
      "from_terragrunt": true,
      "from_terraform_module": true,
      "variable_extraction": true,
      "dependency_mapping": true
    }
  },

  "best_practices": {
    "naming_conventions": {
      "environment_prefix": true,
      "service_suffix": true,
      "resource_tagging": "required"
    },
    "security": {
      "encrypt_state": true,
      "use_remote_state": true,
      "restrict_public_access": true
    },
    "monitoring": {
      "enable_cloudwatch": true,
      "log_retention_days": 30,
      "alert_on_failures": true
    }
  }
}
